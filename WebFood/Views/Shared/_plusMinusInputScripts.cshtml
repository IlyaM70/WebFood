<script type="text/javascript">


    $('.btn-number').click(function (e) {
        e.preventDefault();
        BtnNumber.call($(this));

    });

    function BtnNumber() {
        fieldName = $(this).attr('data-field');
        
        type = $(this).attr('data-type');
        
        // Get the record id from the btn
        var recordId = $(this).attr("data-recordId");

        // Get the meal id from the btn
        var mealId = $(this).attr("data-mealId");

        var input = $("input[name='" + fieldName + "']");
        
        var currentVal = parseInt(input.val());
        
        if (!isNaN(currentVal)) {
            if (type == 'minus') {

                if (currentVal > input.attr('min')) {
                    input.val(currentVal - 1).change();
                    
                    RemoveCartItem(recordId);
                }
                if (parseInt(input.val()) == input.attr('min')) {
                    $(this).attr('disabled', true);
                }

            } else if (type == 'plus') {

                if (currentVal < input.attr('max')) {
                    input.val(currentVal + 1).change();
                    
                    AddMealToCart(mealId);
                }
                if (parseInt(input.val()) == input.attr('max')) {
                    $(this).attr('disabled', true);
                }

            }
        } else {
            input.val(0);
        }

        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }
        });

        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    }
    

    // Removing cart item
    function RemoveCartItem(recordId) {

        if (recordId != '') {
                // Perform the ajax post
            $.post("/ShoppingCart/RemoveFromCart", { "id": recordId },
                    function (data) {
                        
                        // Successful requests get here
                        // Update the page elements
                        if (data.itemCount == 0) {
                        
                            $('#row-' + data.deleteId).fadeOut('slow');
                        } else {
                            $('#item-count-' + data.deleteId).text(data.itemCount);
                        }
                        $('#cart-total').text(data.cartTotal);
                        $('#update-message').text(data.message);
                        toastList.forEach(toast => toast.show())
                        $('#cart-status').text('Cart (' + data.cartCount + ')');
                    });
            }
    }

    // Adding meal to cart
       function  AddMealToCart(id) {
        if (id != '') {
            // Perform the ajax post
            $.post("/ShoppingCart/AddToCart", { "id": id },
                function (data) {

                    // Successful requests get here
                    // Update the page elements
                    $('#item-count-' + data.addedId).val(data.itemCount);
                    $('#cart-total').text(data.cartTotal);
                    $('#update-message').text(data.message);
                    toastList.forEach(toast => toast.show())
                    $('#cart-status').text('Cart (' + data.cartCount + ')');
                });
        }
    }


</script>